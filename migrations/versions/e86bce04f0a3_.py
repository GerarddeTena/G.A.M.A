"""empty message

Revision ID: e86bce04f0a3
Revises: 0896b768235d
Create Date: 2024-06-26 19:21:17.469381

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = 'e86bce04f0a3'
down_revision = '0896b768235d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    constraints = inspector.get_foreign_keys('player', schema='gama')
    constraint_names = [constraint['name'] for constraint in constraints]

    if 'player_ibfk_1' in constraint_names:
        with op.batch_alter_table('player', schema='gama') as batch_op:
            batch_op.drop_constraint('player_ibfk_1', type_='foreignkey')
        # After dropping the constraint, recreate it with the correct reference
        with op.batch_alter_table('player', schema='gama') as batch_op:
            batch_op.create_foreign_key(None, 'user', ['user_id'], ['user_id'], referent_schema='gama')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the newly created foreign key constraint
    with op.batch_alter_table('player', schema='gama') as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
    # Recreate the original foreign key constraint
    with op.batch_alter_table('player', schema='gama') as batch_op:
        batch_op.create_foreign_key('player_ibfk_1', 'user', ['user_id'], ['user_id'], referent_schema='gama')

    # ### end Alembic commands ###
